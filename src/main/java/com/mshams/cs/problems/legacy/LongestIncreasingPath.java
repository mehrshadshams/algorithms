package com.mshams.cs.problems.legacy;

import java.util.Arrays;

import static com.mshams.cs.problems.legacy.Utils.array;

public class LongestIncreasingPath extends Problem {

  public int longestIncreasingPath(int[][] matrix) {
    if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {
      return 0;
    }
    int m = matrix.length;
    int n = matrix[0].length;

    int maxPath = Integer.MIN_VALUE;

    int[][] cache = new int[m][n];
    for (int i = 0; i < m; i++) {
      Arrays.fill(cache[i], -1);
    }

    for (int i = 0; i < m; i++) {
      for (int j = 0; j < n; j++) {
//                boolean[][] visited = new boolean[m][n];
        int length = dfs(matrix, i, j, cache, Integer.MIN_VALUE);
        maxPath = Integer.max(maxPath, length);
        cache[i][j] = length;
      }
    }

    return maxPath;
  }

  int dfs(int[][] M, int i, int j, int[][] cache, int last) {
    int m = M.length;
    int n = M[0].length;

    if (i < 0 || i >= m || j < 0 || j >= n) {
      return 0;
    }

    int val = M[i][j];
    if (val <= last) {
      return 0;
    }

    if (cache[i][j] >= 0) {
      return cache[i][j];
    }

//        if (visited[i][j]) {
//            return 0;
//        }

//        visited = new boolean[m][n];
//        visited[i][j] = true;

    int a = dfs(M, i - 1, j, cache, val);

//        visited = new boolean[m][n];
//        visited[i][j] = true;

    int b = dfs(M, i + 1, j, cache, val);

//        visited = new boolean[m][n];
//        visited[i][j] = true;
    int c = dfs(M, i, j + 1, cache, val);

//        visited = new boolean[m][n];
//        visited[i][j] = true;
    int d = dfs(M, i, j - 1, cache, val);

    cache[i][j] = max(a, b, c, d) + 1;

    return cache[i][j];
  }

  private int max(int... items) {
    int max = Integer.MIN_VALUE;
    for (int x : items) {
      max = Math.max(max, x);
    }
    return max;
  }

  @Override
  void run() {
    int[][] matrix = new int[][]{
            array(9, 9, 4),
            array(6, 6, 8),
            array(2, 1, 1)
    };

//        matrix = new int[][]{
//            array(7,8,9),
//            array(9,7,6),
//            array(7,2,3)
//        };

    matrix = new int[][]{
            array(14, 15, 15, 15, 9, 17, 18, 3, 15, 3, 0, 7, 7, 0, 14, 19, 2, 19, 10, 14, 14, 7, 0, 17, 1, 7, 13, 15, 8, 7, 7, 5, 7, 11, 19, 3, 14, 3, 1, 16, 7, 0, 5, 18, 15, 9, 3),
            array(14, 11, 19, 12, 3, 7, 17, 13, 17, 14, 11, 17, 10, 5, 18, 10, 17, 2, 0, 13, 7, 1, 6, 19, 3, 18, 4, 13, 13, 2, 8, 12, 8, 13, 19, 14, 2, 9, 1, 13, 9, 8, 12, 17, 7, 4, 5),
            array(2, 2, 3, 15, 16, 10, 3, 16, 18, 0, 12, 10, 15, 2, 5, 3, 15, 9, 2, 10, 19, 2, 0, 7, 4, 1, 19, 9, 14, 19, 16, 6, 6, 4, 7, 19, 0, 9, 15, 2, 11, 0, 14, 19, 15, 6, 16),
            array(19, 14, 5, 8, 8, 3, 0, 3, 14, 16, 5, 4, 10, 18, 10, 14, 14, 7, 3, 4, 17, 6, 7, 18, 17, 18, 17, 6, 10, 9, 16, 2, 5, 19, 0, 6, 6, 3, 12, 6, 8, 19, 9, 17, 12, 11, 15),
            array(13, 9, 13, 15, 7, 15, 8, 2, 4, 7, 7, 5, 17, 3, 18, 2, 8, 19, 6, 3, 11, 7, 10, 18, 19, 11, 14, 1, 7, 14, 5, 7, 6, 4, 0, 13, 12, 12, 16, 15, 12, 1, 9, 11, 15, 3, 17),
            array(13, 5, 2, 17, 8, 5, 4, 8, 13, 11, 13, 9, 2, 2, 1, 18, 14, 5, 1, 19, 15, 15, 6, 10, 5, 14, 14, 18, 15, 5, 17, 6, 16, 6, 2, 18, 1, 3, 8, 6, 2, 0, 12, 4, 14, 15, 16),
            array(8, 7, 5, 0, 7, 19, 0, 17, 12, 2, 3, 16, 8, 17, 1, 6, 14, 5, 2, 7, 2, 9, 4, 15, 6, 4, 18, 13, 18, 11, 4, 19, 10, 3, 2, 11, 8, 4, 19, 9, 0, 3, 7, 18, 16, 6, 0),
            array(1, 19, 17, 6, 17, 17, 4, 18, 14, 6, 12, 1, 12, 4, 4, 6, 15, 5, 10, 1, 17, 6, 18, 1, 3, 5, 11, 5, 11, 9, 16, 11, 6, 11, 7, 1, 11, 11, 6, 4, 8, 14, 6, 19, 13, 14, 1),
            array(10, 7, 12, 19, 10, 10, 13, 6, 0, 11, 12, 19, 17, 13, 5, 1, 4, 14, 18, 13, 0, 3, 19, 15, 2, 18, 8, 17, 15, 8, 16, 15, 10, 19, 7, 7, 16, 13, 0, 2, 13, 8, 11, 11, 12, 10, 6),
            array(4, 17, 9, 19, 12, 14, 11, 19, 8, 4, 15, 6, 14, 7, 1, 14, 0, 4, 16, 14, 2, 0, 4, 8, 4, 1, 2, 16, 6, 2, 0, 9, 17, 16, 1, 1, 19, 16, 5, 17, 16, 9, 15, 3, 13, 11, 12),
            array(15, 6, 14, 10, 2, 11, 9, 13, 1, 10, 18, 5, 3, 1, 2, 13, 1, 4, 3, 0, 7, 19, 6, 11, 13, 11, 3, 19, 0, 10, 8, 13, 4, 3, 2, 4, 17, 11, 15, 9, 11, 10, 2, 14, 10, 16, 5),
            array(6, 12, 9, 0, 2, 10, 4, 15, 2, 17, 12, 5, 18, 19, 12, 1, 15, 1, 17, 18, 14, 14, 17, 4, 0, 13, 7, 11, 1, 11, 3, 10, 19, 0, 1, 1, 6, 8, 10, 19, 14, 15, 14, 7, 9, 10, 3),
            array(11, 16, 10, 19, 16, 8, 18, 19, 5, 10, 4, 6, 15, 1, 17, 9, 2, 8, 6, 11, 8, 16, 16, 8, 11, 3, 8, 6, 17, 15, 13, 13, 6, 6, 18, 9, 3, 7, 3, 7, 17, 3, 16, 1, 16, 18, 13),
            array(14, 0, 5, 18, 6, 3, 5, 10, 18, 3, 5, 8, 1, 7, 8, 18, 16, 9, 6, 18, 16, 6, 19, 16, 1, 18, 15, 5, 2, 4, 17, 13, 12, 5, 17, 4, 0, 5, 16, 15, 18, 6, 12, 15, 4, 13, 17),
            array(3, 12, 17, 0, 14, 10, 11, 3, 5, 6, 8, 14, 7, 11, 1, 5, 19, 9, 8, 14, 19, 4, 17, 13, 18, 2, 4, 16, 13, 18, 19, 13, 7, 15, 5, 17, 2, 9, 5, 15, 7, 2, 12, 12, 9, 10, 17),
            array(6, 3, 17, 18, 7, 12, 19, 1, 17, 11, 2, 3, 16, 13, 7, 10, 9, 18, 11, 9, 19, 2, 16, 12, 4, 0, 9, 13, 16, 0, 18, 2, 1, 3, 2, 7, 11, 15, 11, 16, 16, 15, 8, 16, 10, 16, 11), array(16, 16, 5, 16, 7, 2, 9, 19, 11, 5, 2, 10, 8, 4, 4, 19, 14, 1, 1, 9, 18, 7, 4, 14, 2, 1, 8, 10, 14, 16, 14, 18, 18, 7, 7, 4, 0, 12, 16, 2, 8, 18, 9, 18, 17, 10, 13), array(10, 8, 3, 8, 17, 19, 12, 15, 2, 19, 4, 0, 16, 18, 4, 10, 4, 12, 9, 0, 1, 19, 8, 11, 17, 2, 16, 0, 4, 7, 12, 2, 13, 12, 10, 4, 12, 19, 0, 19, 13, 3, 1, 19, 4, 3, 0), array(6, 18, 6, 10, 5, 11, 17, 6, 14, 17, 13, 18, 3, 17, 18, 12, 5, 14, 1, 11, 6, 19, 2, 12, 1, 10, 5, 5, 7, 8, 2, 13, 8, 15, 5, 15, 13, 7, 5, 17, 4, 4, 1, 5, 2, 5, 15), array(15, 12, 0, 9, 4, 1, 6, 15, 12, 1, 2, 11, 12, 2, 0, 14, 11, 1, 3, 15, 7, 8, 5, 1, 7, 7, 0, 6, 16, 17, 8, 2, 5, 0, 2, 7, 0, 9, 0, 14, 8, 11, 3, 16, 8, 19, 2), array(17, 18, 1, 2, 13, 6, 6, 13, 9, 18, 13, 0, 0, 19, 17, 1, 18, 10, 0, 3, 19, 16, 7, 18, 1, 4, 10, 18, 16, 12, 11, 16, 7, 10, 3, 12, 4, 5, 8, 6, 6, 15, 11, 8, 3, 19, 13), array(9, 16, 2, 14, 8, 9, 19, 13, 16, 9, 19, 15, 0, 19, 17, 9, 6, 17, 15, 12, 9, 18, 19, 5, 5, 7, 2, 16, 5, 19, 0, 2, 3, 19, 1, 16, 14, 1, 18, 10, 5, 9, 15, 10, 12, 5, 17), array(1, 5, 14, 9, 16, 18, 17, 5, 1, 6, 1, 15, 10, 9, 8, 12, 2, 12, 0, 14, 7, 14, 7, 19, 11, 14, 6, 14, 11, 18, 19, 8, 19, 13, 15, 15, 7, 13, 3, 6, 0, 8, 4, 18, 15, 18, 14), array(13, 3, 12, 18, 3, 15, 11, 7, 13, 9, 14, 7, 6, 2, 10, 19, 4, 15, 6, 0, 15, 13, 12, 14, 19, 19, 8, 3, 11, 0, 18, 13, 7, 8, 10, 6, 18, 15, 12, 5, 17, 1, 18, 5, 1, 2, 16), array(10, 0, 10, 3, 12, 7, 9, 10, 16, 11, 17, 1, 18, 18, 4, 11, 5, 17, 6, 7, 15, 5, 16, 11, 1, 2, 15, 6, 11, 16, 8, 9, 12, 1, 3, 9, 0, 13, 13, 3, 11, 6, 18, 12, 3, 19, 17), array(8, 2, 3, 16, 7, 6, 18, 14, 12, 11, 13, 1, 10, 3, 8, 4, 19, 13, 13, 7, 0, 3, 19, 15, 11, 13, 9, 3, 5, 11, 5, 13, 5, 9, 18, 18, 5, 18, 14, 9, 9, 15, 5, 13, 13, 5, 15), array(2, 4, 1, 8, 13, 11, 5, 10, 15, 11, 12, 11, 19, 12, 8, 14, 5, 11, 8, 1, 16, 18, 4, 5, 9, 7, 17, 10, 2, 12, 10, 18, 17, 7, 5, 17, 4, 15, 8, 10, 19, 1, 19, 9, 6, 16, 14), array(8, 1, 8, 0, 9, 19, 14, 4, 19, 17, 11, 13, 5, 8, 18, 9, 16, 18, 16, 11, 8, 19, 11, 9, 7, 5, 15, 5, 2, 1, 10, 0, 1, 17, 14, 10, 9, 17, 4, 1, 4, 11, 8, 15, 9, 0, 16), array(15, 3, 1, 15, 4, 1, 3, 16, 7, 13, 6, 16, 8, 10, 14, 13, 3, 15, 4, 8, 16, 13, 1, 13, 11, 0, 5, 18, 16, 7, 17, 14, 0, 10, 14, 13, 13, 10, 10, 10, 19, 8, 14, 8, 3, 18, 19), array(6, 18, 15, 0, 14, 19, 18, 0, 17, 7, 3, 3, 9, 10, 14, 11, 3, 19, 16, 17, 0, 12, 16, 15, 9, 16, 11, 5, 3, 18, 5, 4, 9, 14, 5, 19, 4, 0, 19, 4, 3, 17, 0, 11, 9, 6, 2), array(14, 1, 1, 3, 1, 14, 11, 17, 15, 0, 0, 8, 14, 10, 0, 8, 19, 9, 11, 17, 5, 18, 9, 16, 12, 12, 8, 13, 7, 19, 1, 12, 11, 13, 1, 9, 7, 18, 8, 0, 16, 3, 3, 5, 19, 7, 7), array(14, 2, 19, 19, 11, 12, 0, 12, 10, 0, 8, 1, 8, 4, 9, 13, 19, 13, 10, 7, 8, 3, 4, 17, 14, 8, 16, 2, 8, 14, 4, 14, 3, 12, 11, 9, 10, 2, 7, 15, 9, 9, 10, 15, 15, 2, 5), array(11, 12, 0, 2, 4, 10, 17, 4, 0, 6, 10, 9, 4, 3, 7, 0, 5, 4, 2, 12, 19, 12, 4, 6, 4, 0, 10, 15, 7, 12, 5, 10, 0, 2, 1, 14, 0, 0, 13, 14, 11, 12, 19, 15, 10, 7, 12), array(11, 16, 0, 18, 19, 5, 16, 6, 13, 13, 3, 7, 19, 0, 8, 4, 8, 6, 1, 3, 5, 10, 2, 18, 19, 12, 9, 6, 1, 16, 12, 3, 1, 7, 0, 14, 12, 4, 5, 8, 12, 4, 14, 12, 5, 3, 3), array(9, 15, 7, 14, 18, 8, 15, 0, 5, 6, 5, 1, 3, 8, 1, 2, 5, 10, 10, 7, 14, 19, 4, 4, 5, 19, 0, 6, 10, 2, 7, 13, 10, 12, 17, 4, 18, 15, 7, 6, 6, 14, 9, 6, 14, 16, 13), array(9, 18, 11, 17, 1, 4, 7, 8, 14, 19, 18, 12, 15, 4, 17, 13, 2, 4, 9, 2, 4, 16, 5, 12, 19, 8, 5, 15, 10, 16, 4, 13, 5, 18, 14, 16, 19, 6, 4, 16, 9, 4, 10, 14, 4, 2, 3), array(8, 14, 2, 8, 16, 5, 3, 11, 17, 13, 9, 2, 17, 5, 0, 13, 17, 18, 4, 13, 11, 4, 3, 0, 14, 14, 8, 2, 1, 17, 17, 12, 9, 12, 6, 16, 1, 7, 11, 5, 8, 19, 11, 6, 18, 2, 2), array(7, 12, 0, 2, 19, 6, 5, 11, 1, 19, 9, 13, 9, 4, 11, 0, 0, 3, 10, 14, 9, 4, 3, 9, 6, 13, 16, 11, 3, 17, 9, 14, 13, 19, 18, 14, 12, 17, 5, 11, 11, 17, 14, 17, 17, 17, 5), array(15, 18, 11, 19, 7, 3, 12, 13, 15, 19, 17, 17, 5, 11, 0, 11, 13, 8, 5, 2, 17, 0, 9, 16, 14, 3, 0, 5, 9, 6, 7, 15, 6, 3, 1, 10, 0, 6, 3, 11, 7, 19, 8, 11, 12, 8, 18), array(7, 2, 0, 11, 18, 10, 12, 4, 15, 8, 5, 15, 5, 17, 14, 2, 18, 2, 6, 16, 16, 7, 7, 4, 19, 13, 4, 5, 4, 10, 8, 15, 2, 5, 12, 8, 7, 11, 6, 19, 10, 14, 9, 15, 16, 13, 18), array(2, 5, 10, 17, 16, 13, 2, 16, 19, 9, 16, 16, 16, 13, 17, 2, 15, 11, 15, 5, 13, 17, 2, 8, 10, 19, 15, 2, 0, 17, 1, 11, 15, 17, 6, 5, 2, 14, 18, 19, 19, 12, 7, 11, 2, 2, 1), array(19, 2, 6, 7, 15, 9, 5, 12, 13, 10, 4, 7, 13, 8, 7, 8, 0, 17, 1, 19, 9, 18, 5, 19, 11, 14, 16, 17, 11, 15, 19, 4, 17, 8, 16, 1, 1, 13, 12, 0, 9, 13, 1, 10, 18, 14, 15), array(3, 9, 12, 17, 15, 15, 3, 11, 5, 0, 15, 6, 7, 13, 18, 3, 13, 13, 1, 8, 14, 4, 13, 5, 16, 12, 16, 17, 13, 4, 4, 6, 10, 10, 4, 6, 4, 16, 14, 19, 3, 3, 2, 17, 11, 16, 8), array(12, 11, 4, 13, 7, 4, 12, 12, 11, 2, 18, 4, 4, 11, 16, 14, 10, 12, 11, 5, 4, 18, 7, 10, 19, 14, 14, 11, 5, 4, 14, 12, 9, 3, 1, 0, 4, 13, 12, 14, 18, 19, 8, 15, 15, 16, 9), array(13, 12, 3, 0, 19, 5, 19, 17, 12, 6, 10, 11, 14, 15, 2, 0, 3, 9, 9, 0, 10, 11, 1, 1, 16, 6, 11, 12, 3, 17, 4, 17, 17, 16, 13, 10, 10, 7, 1, 2, 3, 19, 11, 8, 7, 3, 6), array(6, 8, 14, 16, 9, 11, 17, 18, 19, 18, 10, 14, 12, 10, 15, 16, 9, 5, 10, 11, 8, 14, 6, 16, 5, 8, 4, 8, 3, 6, 7, 7, 11, 0, 18, 10, 4, 15, 5, 10, 17, 7, 19, 19, 15, 18, 4), array(3, 8, 5, 17, 1, 2, 11, 5, 6, 7, 2, 11, 7, 15, 19, 10, 17, 8, 10, 14, 5, 14, 6, 4, 0, 4, 19, 2, 7, 17, 5, 8, 9, 8, 2, 3, 2, 12, 1, 0, 13, 8, 14, 10, 10, 12, 6), array(13, 17, 0, 11, 6, 10, 5, 1, 13, 17, 7, 15, 9, 14, 7, 5, 12, 7, 18, 8, 19, 15, 10, 5, 12, 8, 11, 3, 7, 14, 11, 11, 18, 1, 0, 14, 2, 16, 7, 14, 8, 15, 19, 7, 9, 16, 7), array(1, 11, 12, 1, 6, 0, 9, 0, 5, 0, 7, 17, 2, 7, 10, 10, 2, 0, 11, 16, 8, 6, 5, 7, 14, 14, 8, 8, 14, 2, 17, 7, 16, 13, 12, 7, 17, 8, 1, 11, 14, 13, 7, 6, 7, 2, 16), array(7, 7, 8, 15, 12, 5, 14, 19, 17, 14, 18, 16, 10, 13, 4, 12, 5, 0, 7, 16, 13, 8, 17, 2, 9, 1, 18, 11, 13, 5, 12, 6, 5, 11, 9, 19, 7, 8, 10, 3, 17, 16, 1, 5, 4, 19, 15), array(6, 3, 4, 5, 6, 14, 12, 0, 18, 12, 16, 15, 19, 15, 0, 9, 13, 12, 16, 0, 9, 13, 5, 14, 17, 0, 13, 6, 17, 3, 13, 11, 15, 16, 12, 18, 8, 12, 4, 1, 7, 11, 8, 9, 15, 8, 5), array(0, 13, 4, 15, 12, 12, 12, 13, 13, 12, 16, 10, 18, 7, 6, 14, 12, 15, 13, 15, 6, 14, 16, 13, 4, 19, 2, 10, 3, 0, 7, 12, 11, 13, 17, 12, 17, 1, 2, 16, 9, 6, 11, 5, 7, 11, 14), array(19, 17, 1, 8, 11, 5, 2, 5, 14, 5, 10, 5, 16, 5, 9, 9, 16, 12, 15, 8, 16, 0, 14, 8, 13, 4, 9, 8, 0, 4, 6, 3, 7, 4, 2, 18, 19, 12, 6, 12, 4, 12, 14, 5, 16, 16, 6), array(10, 10, 13, 5, 19, 17, 12, 1, 1, 9, 11, 10, 7, 1, 2, 15, 0, 19, 19, 6, 8, 15, 3, 17, 13, 11, 1, 9, 13, 8, 4, 8, 9, 9, 16, 16, 16, 5, 14, 10, 18, 7, 19, 5, 16, 6, 15), array(18, 11, 11, 3, 1, 5, 3, 5, 4, 11, 6, 7, 12, 4, 6, 4, 14, 11, 10, 3, 11, 2, 18, 17, 19, 3, 8, 2, 5, 19, 1, 7, 16, 17, 18, 12, 7, 1, 7, 14, 1, 3, 17, 12, 7, 8, 8), array(8, 16, 12, 0, 8, 8, 1, 17, 9, 18, 19, 11, 13, 15, 17, 0, 5, 19, 13, 4, 3, 3, 16, 7, 14, 10, 9, 5, 14, 2, 4, 8, 0, 2, 11, 8, 4, 17, 1, 3, 7, 18, 19, 1, 16, 3, 5), array(17, 1, 14, 13, 14, 6, 18, 10, 15, 6, 15, 0, 14, 7, 0, 4, 13, 17, 13, 17, 9, 7, 3, 10, 6, 15, 8, 15, 5, 7, 5, 10, 10, 8, 10, 2, 16, 10, 4, 8, 7, 2, 14, 17, 15, 1, 11), array(9, 2, 3, 12, 13, 4, 5, 18, 17, 0, 19, 2, 6, 4, 5, 1, 18, 14, 1, 5, 3, 13, 18, 17, 8, 11, 5, 5, 4, 8, 13, 9, 17, 1, 13, 11, 13, 8, 9, 10, 17, 16, 9, 14, 9, 13, 0), array(6, 16, 0, 13, 13, 13, 10, 12, 0, 12, 15, 19, 15, 8, 14, 15, 3, 10, 1, 15, 15, 18, 2, 1, 6, 14, 5, 13, 8, 16, 5, 18, 10, 17, 14, 15, 17, 8, 2, 3, 3, 11, 11, 17, 12, 10, 17), array(15, 0, 3, 13, 14, 7, 7, 9, 12, 7, 12, 5, 18, 10, 14, 15, 1, 19, 19, 3, 7, 14, 11, 9, 2, 0, 13, 3, 14, 9, 6, 4, 17, 13, 16, 15, 5, 7, 10, 18, 13, 1, 15, 19, 0, 2, 12), array(12, 15, 13, 4, 7, 10, 2, 19, 13, 7, 3, 15, 11, 10, 17, 11, 0, 5, 3, 1, 10, 12, 19, 12, 9, 18, 0, 7, 18, 0, 7, 18, 16, 5, 14, 10, 10, 15, 12, 8, 19, 8, 2, 19, 8, 14, 0), array(18, 4, 7, 12, 10, 14, 12, 16, 16, 17, 9, 11, 5, 16, 17, 1, 11, 10, 0, 0, 11, 19, 14, 16, 13, 10, 18, 15, 14, 8, 5, 11, 19, 17, 10, 8, 4, 7, 12, 9, 12, 14, 19, 11, 7, 16, 7), array(17, 16, 2, 14, 4, 18, 16, 12, 19, 15, 4, 10, 4, 13, 4, 8, 13, 17, 10, 12, 5, 9, 13, 13, 10, 1, 18, 12, 1, 19, 6, 15, 2, 9, 18, 0, 6, 0, 0, 17, 12, 18, 1, 2, 3, 15, 4), array(18, 18, 9, 8, 3, 9, 11, 0, 18, 4, 18, 6, 4, 10, 12, 5, 8, 0, 13, 3, 2, 18, 3, 3, 3, 15, 1, 6, 11, 4, 4, 17, 8, 10, 7, 3, 9, 1, 17, 8, 3, 18, 5, 8, 19, 1, 10), array(19, 7, 0, 5, 7, 15, 7, 8, 1, 17, 4, 17, 18, 1, 1, 12, 5, 9, 14, 6, 2, 4, 1, 15, 17, 9, 0, 11, 16, 9, 8, 5, 7, 15, 4, 12, 18, 13, 18, 16, 6, 12, 8, 13, 10, 11, 12), array(4, 18, 5, 5, 19, 9, 5, 16, 17, 11, 8, 2, 15, 9, 6, 9, 18, 5, 1, 19, 0, 7, 7, 19, 18, 14, 2, 6, 11, 2, 7, 2, 6, 6, 9, 3, 5, 13, 16, 8, 16, 14, 14, 5, 6, 16, 18), array(14, 15, 5, 4, 2, 2, 7, 4, 18, 2, 9, 3, 18, 5, 5, 8, 3, 4, 3, 8, 16, 9, 5, 13, 15, 6, 10, 17, 12, 0, 0, 16, 15, 10, 19, 16, 18, 17, 13, 14, 15, 12, 8, 5, 1, 7, 15), array(17, 15, 13, 7, 10, 5, 19, 11, 12, 10, 17, 3, 17, 11, 4, 10, 18, 14, 10, 19, 2, 16, 19, 10, 11, 1, 4, 9, 11, 18, 10, 13, 8, 17, 4, 12, 12, 13, 3, 8, 1, 17, 0, 9, 5, 10, 3), array(1, 14, 5, 7, 5, 9, 12, 9, 9, 0, 9, 19, 9, 6, 9, 2, 15, 7, 10, 8, 12, 10, 4, 12, 14, 4, 3, 19, 8, 13, 18, 17, 10, 13, 1, 17, 9, 9, 0, 18, 7, 1, 11, 3, 8, 16, 10), array(3, 0, 7, 2, 10, 13, 6, 19, 3, 1, 4, 14, 10, 13, 14, 2, 13, 9, 3, 18, 0, 3, 11, 18, 12, 16, 6, 11, 14, 10, 17, 10, 16, 1, 12, 13, 3, 5, 19, 1, 15, 12, 11, 0, 18, 6, 15), array(10, 1, 8, 17, 0, 9, 15, 15, 13, 4, 19, 15, 12, 11, 12, 8, 0, 14, 13, 2, 19, 4, 18, 2, 6, 5, 4, 15, 6, 13, 12, 17, 3, 6, 10, 9, 2, 3, 10, 15, 17, 13, 8, 0, 0, 2, 4), array(9, 0, 16, 16, 13, 19, 8, 7, 9, 15, 17, 16, 17, 7, 5, 7, 15, 8, 7, 17, 11, 17, 13, 2, 6, 15, 9, 8, 9, 17, 3, 3, 5, 19, 15, 4, 17, 18, 11, 11, 4, 14, 7, 1, 18, 9, 1), array(16, 1, 1, 2, 5, 9, 1, 13, 16, 13, 10, 17, 15, 10, 7, 15, 14, 3, 16, 19, 15, 14, 0, 1, 8, 13, 1, 14, 18, 8, 6, 5, 1, 8, 7, 19, 19, 10, 14, 19, 8, 18, 6, 4, 16, 14, 0), array(0, 11, 15, 11, 0, 5, 0, 5, 2, 5, 7, 0, 7, 12, 12, 3, 9, 16, 19, 0, 15, 11, 6, 8, 1, 3, 1, 15, 7, 11, 7, 2, 0, 8, 6, 12, 5, 3, 2, 8, 14, 6, 11, 17, 13, 6, 2), array(16, 5, 7, 3, 6, 18, 4, 8, 14, 4, 7, 12, 6, 18, 9, 11, 19, 18, 15, 19, 12, 15, 4, 2, 6, 6, 3, 7, 6, 13, 5, 17, 0, 17, 8, 7, 5, 16, 15, 2, 5, 5, 1, 14, 14, 16, 14), array(15, 9, 6, 13, 19, 10, 17, 9, 6, 3, 8, 8, 15, 6, 15, 8, 19, 4, 6, 17, 11, 7, 16, 7, 10, 13, 11, 10, 8, 19, 6, 5, 0, 0, 12, 15, 9, 6, 0, 5, 7, 11, 14, 12, 13, 14, 14), array(0, 15, 1, 11, 4, 8, 18, 15, 9, 17, 14, 14, 16, 4, 2, 12, 7, 12, 18, 0, 8, 2, 16, 8, 5, 2, 2, 7, 5, 0, 4, 19, 9, 16, 16, 16, 19, 1, 13, 9, 0, 15, 19, 14, 1, 6, 18), array(2, 19, 12, 5, 15, 7, 12, 13, 8, 5, 13, 15, 19, 6, 9, 10, 6, 18, 8, 16, 1, 12, 19, 13, 1, 5, 0, 9, 7, 11, 1, 11, 11, 10, 0, 14, 16, 2, 14, 16, 17, 12, 1, 7, 15, 11, 2)
    };

    int path = longestIncreasingPath(matrix);

    System.out.println(path);
  }
}
